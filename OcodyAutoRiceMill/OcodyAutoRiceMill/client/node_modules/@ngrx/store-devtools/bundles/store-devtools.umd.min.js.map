{"version":3,"sources":["modules/store-devtools/store-devtools.umd.js"],"names":["global","factory","exports","module","require","define","amd","ngrx","storeDevtools","ng","core","rxjs","operators","this","store","StoreDevtoolsConfig","STORE_DEVTOOLS_CONFIG","InjectionToken","INITIAL_OPTIONS","PERFORM_ACTION","REFRESH","RESET","ROLLBACK","COMMIT","SWEEP","TOGGLE_ACTION","SET_ACTIONS_ACTIVE","JUMP_TO_STATE","JUMP_TO_ACTION","IMPORT_STATE","PerformAction","action","timestamp","type","Error","Refresh","Reset","Rollback","Commit","Sweep","ToggleAction","id","JumpToState","index","JumpToAction","actionId","ImportState","nextLiftedState","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","difference","first","second","filter","item","indexOf","unliftState","liftedState","computedStates","currentStateIndex","state","liftAction","Date","now","sanitizeActions","actionSanitizer","actions","keys","reduce","sanitizedActions","actionIdx","idx","Number","sanitizeAction","sanitizeStates","stateSanitizer","states","map","computedState","sanitizeState","error","stateIdx","__assign$1","ExtensionActionTypes","START","DISPATCH","STOP","ACTION","REDUX_DEVTOOLS_EXTENSION","DevtoolsExtension","devtoolsExtension","config","instanceId","createActionStreams","notify","currentState","sanitizedState","sanitizedAction","nextActionId","extensionConnection","send","sanitizedLiftedState","actionsById","getExtensionConfig","createChangesObservable","_this","Observable","subscriber","connection","connect","init","subscribe","change","next","unsubscribe","empty","changes$","pipe","share","start$","stop$","liftedActions$","unwrapAction","payload","actionsUntilStop$","takeUntil","liftedUntilStop$","actions$","switchMap","eval","extensionOptions","name","features","serialize","maxAge","decorators","Injectable","ctorParameters","undefined","Inject","args","__assign$2","__read","o","m","Symbol","iterator","r","e","ar","done","push","value","__spread","concat","INIT_ACTION","INIT","computeNextEntry","reducer","errorHandler","nextError","nextState","err","toString","handleError","stack","recomputeStates","minInvalidatedStateIndex","committedState","stagedActionIds","skippedActionIds","nextComputedStates","slice","previousEntry","previousState","previousError","entry","liftInitialState","initialCommittedState","monitorReducer","monitorState","0","liftReducerWith","initialLiftedState","options","liftedAction","_a","commitExcessActions","excess","idsToDelete","create","_b","actionId_1","start","end","active","actionIds","Infinity","Math","min","UPDATE","cmp","__extends","extendStatics","setPrototypeOf","__proto__","Array","d","b","__","constructor","__read$1","DevtoolsDispatcher","_super","apply","ActionsSubject","StoreDevtools","dispatcher","reducers$","extension","scannedActions","initialState","liftedInitialState","monitor","liftReducer","liftedAction$","merge","asObservable","skip","observeOn","queueScheduler","liftedReducer$","liftedStateSubject","ReplaySubject","liftedStateSubscription","withLatestFrom","scan","_c","reducedLiftedState","extensionStartSubscription","refresh","liftedState$","state$","stateSubscription","dispatch","complete","performAction","reset","rollback","commit","sweep","toggleAction","jumpToAction","jumpToState","importState","ReducerObservable","ScannedActionsSubject","ErrorHandler","INITIAL_STATE","IS_EXTENSION_OR_MONITOR_PRESENT","createIsExtensionOrMonitorPresent","Boolean","noMonitor","createReduxDevtoolsExtension","window","createStateObservable","devtools","DEFAULT_NAME","createConfig","_options","DEFAULT_OPTIONS","logOnly","pause","export","test","StoreDevtoolsModule","instrument","ngModule","providers","provide","useValue","deps","useFactory","StateObservable","ReducerManagerDispatcher","useExisting","NgModule","ɵngrx_modules_store_devtools_store_devtools_i","ɵngrx_modules_store_devtools_store_devtools_h","ɵngrx_modules_store_devtools_store_devtools_g","ɵngrx_modules_store_devtools_store_devtools_k","ɵngrx_modules_store_devtools_store_devtools_j","ɵngrx_modules_store_devtools_store_devtools_a","ɵngrx_modules_store_devtools_store_devtools_f","ɵngrx_modules_store_devtools_store_devtools_b","ɵngrx_modules_store_devtools_store_devtools_c","ɵngrx_modules_store_devtools_store_devtools_d","ɵngrx_modules_store_devtools_store_devtools_e","defineProperty"],"mappings":"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","sourcesContent":["/**\n * @license NgRx 6.1.0\n * (c) 2015-2018 Brandon Roberts, Mike Ryan, Rob Wormald, Victor Savkin\n * License: MIT\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('rxjs'), require('rxjs/operators'), require('@ngrx/store')) :\n    typeof define === 'function' && define.amd ? define('@ngrx/store-devtools', ['exports', '@angular/core', 'rxjs', 'rxjs/operators', '@ngrx/store'], factory) :\n    (factory((global.ngrx = global.ngrx || {}, global.ngrx.storeDevtools = {}),global.ng.core,global.rxjs,global.rxjs.operators,global['@ngrx/store']));\n}(this, (function (exports,core,rxjs,operators,store) { 'use strict';\n\n    var StoreDevtoolsConfig = /** @class */ (function () {\n        function StoreDevtoolsConfig() {\n        }\n        return StoreDevtoolsConfig;\n    }());\n    var STORE_DEVTOOLS_CONFIG = new core.InjectionToken('@ngrx/devtools Options');\n    var INITIAL_OPTIONS = new core.InjectionToken('@ngrx/devtools Initial Config');\n\n    var PERFORM_ACTION = 'PERFORM_ACTION';\n    var REFRESH = 'REFRESH';\n    var RESET = 'RESET';\n    var ROLLBACK = 'ROLLBACK';\n    var COMMIT = 'COMMIT';\n    var SWEEP = 'SWEEP';\n    var TOGGLE_ACTION = 'TOGGLE_ACTION';\n    var SET_ACTIONS_ACTIVE = 'SET_ACTIONS_ACTIVE';\n    var JUMP_TO_STATE = 'JUMP_TO_STATE';\n    var JUMP_TO_ACTION = 'JUMP_TO_ACTION';\n    var IMPORT_STATE = 'IMPORT_STATE';\n    var PerformAction = /** @class */ (function () {\n        function PerformAction(action, timestamp) {\n            this.action = action;\n            this.timestamp = timestamp;\n            this.type = PERFORM_ACTION;\n            if (typeof action.type === 'undefined') {\n                throw new Error('Actions may not have an undefined \"type\" property. ' +\n                    'Have you misspelled a constant?');\n            }\n        }\n        return PerformAction;\n    }());\n    var Refresh = /** @class */ (function () {\n        function Refresh() {\n            this.type = REFRESH;\n        }\n        return Refresh;\n    }());\n    var Reset = /** @class */ (function () {\n        function Reset(timestamp) {\n            this.timestamp = timestamp;\n            this.type = RESET;\n        }\n        return Reset;\n    }());\n    var Rollback = /** @class */ (function () {\n        function Rollback(timestamp) {\n            this.timestamp = timestamp;\n            this.type = ROLLBACK;\n        }\n        return Rollback;\n    }());\n    var Commit = /** @class */ (function () {\n        function Commit(timestamp) {\n            this.timestamp = timestamp;\n            this.type = COMMIT;\n        }\n        return Commit;\n    }());\n    var Sweep = /** @class */ (function () {\n        function Sweep() {\n            this.type = SWEEP;\n        }\n        return Sweep;\n    }());\n    var ToggleAction = /** @class */ (function () {\n        function ToggleAction(id) {\n            this.id = id;\n            this.type = TOGGLE_ACTION;\n        }\n        return ToggleAction;\n    }());\n    var JumpToState = /** @class */ (function () {\n        function JumpToState(index) {\n            this.index = index;\n            this.type = JUMP_TO_STATE;\n        }\n        return JumpToState;\n    }());\n    var JumpToAction = /** @class */ (function () {\n        function JumpToAction(actionId) {\n            this.actionId = actionId;\n            this.type = JUMP_TO_ACTION;\n        }\n        return JumpToAction;\n    }());\n    var ImportState = /** @class */ (function () {\n        function ImportState(nextLiftedState) {\n            this.nextLiftedState = nextLiftedState;\n            this.type = IMPORT_STATE;\n        }\n        return ImportState;\n    }());\n\n    var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    function difference(first, second) {\n        return first.filter(function (item) { return second.indexOf(item) < 0; });\n    }\n    /**\n     * Provides an app's view into the state of the lifted store.\n     */\n    function unliftState(liftedState) {\n        var computedStates = liftedState.computedStates, currentStateIndex = liftedState.currentStateIndex;\n        var state = computedStates[currentStateIndex].state;\n        return state;\n    }\n    /**\n     * Lifts an app's action into an action on the lifted store.\n     */\n    function liftAction(action) {\n        return new PerformAction(action, +Date.now());\n    }\n    /**\n     * Sanitizes given actions with given function.\n     */\n    function sanitizeActions(actionSanitizer, actions) {\n        return Object.keys(actions).reduce(function (sanitizedActions, actionIdx) {\n            var idx = Number(actionIdx);\n            sanitizedActions[idx] = sanitizeAction(actionSanitizer, actions[idx], idx);\n            return sanitizedActions;\n        }, {});\n    }\n    /**\n     * Sanitizes given action with given function.\n     */\n    function sanitizeAction(actionSanitizer, action, actionIdx) {\n        return __assign({}, action, { action: actionSanitizer(action.action, actionIdx) });\n    }\n    /**\n     * Sanitizes given states with given function.\n     */\n    function sanitizeStates(stateSanitizer, states) {\n        return states.map(function (computedState, idx) {\n            return ({\n                state: sanitizeState(stateSanitizer, computedState.state, idx),\n                error: computedState.error,\n            });\n        });\n    }\n    /**\n     * Sanitizes given state with given function.\n     */\n    function sanitizeState(stateSanitizer, state, stateIdx) {\n        return stateSanitizer(state, stateIdx);\n    }\n\n    var __assign$1 = (undefined && undefined.__assign) || Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    var ExtensionActionTypes = {\n        START: 'START',\n        DISPATCH: 'DISPATCH',\n        STOP: 'STOP',\n        ACTION: 'ACTION',\n    };\n    var REDUX_DEVTOOLS_EXTENSION = new core.InjectionToken('Redux Devtools Extension');\n    var DevtoolsExtension = /** @class */ (function () {\n        function DevtoolsExtension(devtoolsExtension, config) {\n            this.config = config;\n            this.instanceId = \"ngrx-store-\" + Date.now();\n            this.devtoolsExtension = devtoolsExtension;\n            this.createActionStreams();\n        }\n        DevtoolsExtension.prototype.notify = function (action, state) {\n            if (!this.devtoolsExtension) {\n                return;\n            }\n            // Check to see if the action requires a full update of the liftedState.\n            // If it is a simple action generated by the user's app, only send the\n            // action and the current state (fast).\n            //\n            // A full liftedState update (slow: serializes the entire liftedState) is\n            // only required when:\n            //   a) redux-devtools-extension fires the @@Init action (ignored by\n            //      @ngrx/store-devtools)\n            //   b) an action is generated by an @ngrx module (e.g. @ngrx/effects/init\n            //      or @ngrx/store/update-reducers)\n            //   c) the state has been recomputed due to time-traveling\n            //   d) any action that is not a PerformAction to err on the side of\n            //      caution.\n            if (action.type === PERFORM_ACTION) {\n                var currentState = unliftState(state);\n                var sanitizedState = this.config.stateSanitizer\n                    ? sanitizeState(this.config.stateSanitizer, currentState, state.currentStateIndex)\n                    : currentState;\n                var sanitizedAction = this.config.actionSanitizer\n                    ? sanitizeAction(this.config.actionSanitizer, action, state.nextActionId)\n                    : action;\n                this.extensionConnection.send(sanitizedAction, sanitizedState);\n            }\n            else {\n                // Requires full state update\n                var sanitizedLiftedState = __assign$1({}, state, { actionsById: this.config.actionSanitizer\n                        ? sanitizeActions(this.config.actionSanitizer, state.actionsById)\n                        : state.actionsById, computedStates: this.config.stateSanitizer\n                        ? sanitizeStates(this.config.stateSanitizer, state.computedStates)\n                        : state.computedStates });\n                this.devtoolsExtension.send(null, sanitizedLiftedState, this.getExtensionConfig(this.instanceId, this.config), this.instanceId);\n            }\n        };\n        DevtoolsExtension.prototype.createChangesObservable = function () {\n            var _this = this;\n            if (!this.devtoolsExtension) {\n                return rxjs.empty();\n            }\n            return new rxjs.Observable(function (subscriber) {\n                var connection = _this.devtoolsExtension.connect(_this.getExtensionConfig(_this.instanceId, _this.config));\n                _this.extensionConnection = connection;\n                connection.init();\n                connection.subscribe(function (change) { return subscriber.next(change); });\n                return connection.unsubscribe;\n            });\n        };\n        DevtoolsExtension.prototype.createActionStreams = function () {\n            var _this = this;\n            // Listens to all changes based on our instanceId\n            var changes$ = this.createChangesObservable().pipe(operators.share());\n            // Listen for the start action\n            var start$ = changes$.pipe(operators.filter(function (change) { return change.type === ExtensionActionTypes.START; }));\n            // Listen for the stop action\n            var stop$ = changes$.pipe(operators.filter(function (change) { return change.type === ExtensionActionTypes.STOP; }));\n            // Listen for lifted actions\n            var liftedActions$ = changes$.pipe(operators.filter(function (change) { return change.type === ExtensionActionTypes.DISPATCH; }), operators.map(function (change) { return _this.unwrapAction(change.payload); }));\n            // Listen for unlifted actions\n            var actions$ = changes$.pipe(operators.filter(function (change) { return change.type === ExtensionActionTypes.ACTION; }), operators.map(function (change) { return _this.unwrapAction(change.payload); }));\n            var actionsUntilStop$ = actions$.pipe(operators.takeUntil(stop$));\n            var liftedUntilStop$ = liftedActions$.pipe(operators.takeUntil(stop$));\n            this.start$ = start$.pipe(operators.takeUntil(stop$));\n            // Only take the action sources between the start/stop events\n            this.actions$ = this.start$.pipe(operators.switchMap(function () { return actionsUntilStop$; }));\n            this.liftedActions$ = this.start$.pipe(operators.switchMap(function () { return liftedUntilStop$; }));\n        };\n        DevtoolsExtension.prototype.unwrapAction = function (action) {\n            return typeof action === 'string' ? eval(\"(\" + action + \")\") : action;\n        };\n        DevtoolsExtension.prototype.getExtensionConfig = function (instanceId, config) {\n            var extensionOptions = {\n                instanceId: instanceId,\n                name: config.name,\n                features: config.features,\n                serialize: config.serialize,\n            };\n            if (config.maxAge !== false /* support === 0 */) {\n                extensionOptions.maxAge = config.maxAge;\n            }\n            return extensionOptions;\n        };\n        DevtoolsExtension.decorators = [\n            { type: core.Injectable }\n        ];\n        /** @nocollapse */\n        DevtoolsExtension.ctorParameters = function () { return [\n            { type: undefined, decorators: [{ type: core.Inject, args: [REDUX_DEVTOOLS_EXTENSION,] },] },\n            { type: StoreDevtoolsConfig, decorators: [{ type: core.Inject, args: [STORE_DEVTOOLS_CONFIG,] },] },\n        ]; };\n        return DevtoolsExtension;\n    }());\n\n    var __assign$2 = (undefined && undefined.__assign) || Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    var __read = (undefined && undefined.__read) || function (o, n) {\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n        if (!m) return o;\n        var i = m.call(o), r, ar = [], e;\n        try {\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n        }\n        catch (error) { e = { error: error }; }\n        finally {\n            try {\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\n            }\n            finally { if (e) throw e.error; }\n        }\n        return ar;\n    };\n    var __spread = (undefined && undefined.__spread) || function () {\n        for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n        return ar;\n    };\n    var INIT_ACTION = { type: store.INIT };\n    /**\n     * Computes the next entry in the log by applying an action.\n     */\n    function computeNextEntry(reducer, action, state, error, errorHandler) {\n        if (error) {\n            return {\n                state: state,\n                error: 'Interrupted by an error up the chain',\n            };\n        }\n        var nextState = state;\n        var nextError;\n        try {\n            nextState = reducer(state, action);\n        }\n        catch (err) {\n            nextError = err.toString();\n            errorHandler.handleError(err.stack || err);\n        }\n        return {\n            state: nextState,\n            error: nextError,\n        };\n    }\n    /**\n     * Runs the reducer on invalidated actions to get a fresh computation log.\n     */\n    function recomputeStates(computedStates, minInvalidatedStateIndex, reducer, committedState, actionsById, stagedActionIds, skippedActionIds, errorHandler) {\n        // Optimization: exit early and return the same reference\n        // if we know nothing could have changed.\n        if (minInvalidatedStateIndex >= computedStates.length &&\n            computedStates.length === stagedActionIds.length) {\n            return computedStates;\n        }\n        var nextComputedStates = computedStates.slice(0, minInvalidatedStateIndex);\n        for (var i = minInvalidatedStateIndex; i < stagedActionIds.length; i++) {\n            var actionId = stagedActionIds[i];\n            var action = actionsById[actionId].action;\n            var previousEntry = nextComputedStates[i - 1];\n            var previousState = previousEntry ? previousEntry.state : committedState;\n            var previousError = previousEntry ? previousEntry.error : undefined;\n            var shouldSkip = skippedActionIds.indexOf(actionId) > -1;\n            var entry = shouldSkip\n                ? previousEntry\n                : computeNextEntry(reducer, action, previousState, previousError, errorHandler);\n            nextComputedStates.push(entry);\n        }\n        return nextComputedStates;\n    }\n    function liftInitialState(initialCommittedState, monitorReducer) {\n        return {\n            monitorState: monitorReducer(undefined, {}),\n            nextActionId: 1,\n            actionsById: { 0: liftAction(INIT_ACTION) },\n            stagedActionIds: [0],\n            skippedActionIds: [],\n            committedState: initialCommittedState,\n            currentStateIndex: 0,\n            computedStates: [],\n        };\n    }\n    /**\n     * Creates a history state reducer from an app's reducer.\n     */\n    function liftReducerWith(initialCommittedState, initialLiftedState, errorHandler, monitorReducer, options) {\n        if (options === void 0) { options = {}; }\n        /**\n           * Manages how the history actions modify the history state.\n           */\n        return function (reducer) {\n            return function (liftedState, liftedAction) {\n                var _a = liftedState || initialLiftedState, monitorState = _a.monitorState, actionsById = _a.actionsById, nextActionId = _a.nextActionId, stagedActionIds = _a.stagedActionIds, skippedActionIds = _a.skippedActionIds, committedState = _a.committedState, currentStateIndex = _a.currentStateIndex, computedStates = _a.computedStates;\n                if (!liftedState) {\n                    // Prevent mutating initialLiftedState\n                    actionsById = Object.create(actionsById);\n                }\n                function commitExcessActions(n) {\n                    // Auto-commits n-number of excess actions.\n                    var excess = n;\n                    var idsToDelete = stagedActionIds.slice(1, excess + 1);\n                    for (var i = 0; i < idsToDelete.length; i++) {\n                        if (computedStates[i + 1].error) {\n                            // Stop if error is found. Commit actions up to error.\n                            excess = i;\n                            idsToDelete = stagedActionIds.slice(1, excess + 1);\n                            break;\n                        }\n                        else {\n                            delete actionsById[idsToDelete[i]];\n                        }\n                    }\n                    skippedActionIds = skippedActionIds.filter(function (id) { return idsToDelete.indexOf(id) === -1; });\n                    stagedActionIds = __spread([0], stagedActionIds.slice(excess + 1));\n                    committedState = computedStates[excess].state;\n                    computedStates = computedStates.slice(excess);\n                    currentStateIndex =\n                        currentStateIndex > excess ? currentStateIndex - excess : 0;\n                }\n                // By default, aggressively recompute every state whatever happens.\n                // This has O(n) performance, so we'll override this to a sensible\n                // value whenever we feel like we don't have to recompute the states.\n                var minInvalidatedStateIndex = 0;\n                switch (liftedAction.type) {\n                    case RESET: {\n                        // Get back to the state the store was created with.\n                        actionsById = { 0: liftAction(INIT_ACTION) };\n                        nextActionId = 1;\n                        stagedActionIds = [0];\n                        skippedActionIds = [];\n                        committedState = initialCommittedState;\n                        currentStateIndex = 0;\n                        computedStates = [];\n                        break;\n                    }\n                    case COMMIT: {\n                        // Consider the last committed state the new starting point.\n                        // Squash any staged actions into a single committed state.\n                        actionsById = { 0: liftAction(INIT_ACTION) };\n                        nextActionId = 1;\n                        stagedActionIds = [0];\n                        skippedActionIds = [];\n                        committedState = computedStates[currentStateIndex].state;\n                        currentStateIndex = 0;\n                        computedStates = [];\n                        break;\n                    }\n                    case ROLLBACK: {\n                        // Forget about any staged actions.\n                        // Start again from the last committed state.\n                        actionsById = { 0: liftAction(INIT_ACTION) };\n                        nextActionId = 1;\n                        stagedActionIds = [0];\n                        skippedActionIds = [];\n                        currentStateIndex = 0;\n                        computedStates = [];\n                        break;\n                    }\n                    case TOGGLE_ACTION: {\n                        // Toggle whether an action with given ID is skipped.\n                        // Being skipped means it is a no-op during the computation.\n                        var actionId_1 = liftedAction.id;\n                        var index = skippedActionIds.indexOf(actionId_1);\n                        if (index === -1) {\n                            skippedActionIds = __spread([actionId_1], skippedActionIds);\n                        }\n                        else {\n                            skippedActionIds = skippedActionIds.filter(function (id) { return id !== actionId_1; });\n                        }\n                        // Optimization: we know history before this action hasn't changed\n                        minInvalidatedStateIndex = stagedActionIds.indexOf(actionId_1);\n                        break;\n                    }\n                    case SET_ACTIONS_ACTIVE: {\n                        // Toggle whether an action with given ID is skipped.\n                        // Being skipped means it is a no-op during the computation.\n                        var start = liftedAction.start, end = liftedAction.end, active = liftedAction.active;\n                        var actionIds = [];\n                        for (var i = start; i < end; i++)\n                            actionIds.push(i);\n                        if (active) {\n                            skippedActionIds = difference(skippedActionIds, actionIds);\n                        }\n                        else {\n                            skippedActionIds = __spread(skippedActionIds, actionIds);\n                        }\n                        // Optimization: we know history before this action hasn't changed\n                        minInvalidatedStateIndex = stagedActionIds.indexOf(start);\n                        break;\n                    }\n                    case JUMP_TO_STATE: {\n                        // Without recomputing anything, move the pointer that tell us\n                        // which state is considered the current one. Useful for sliders.\n                        currentStateIndex = liftedAction.index;\n                        // Optimization: we know the history has not changed.\n                        minInvalidatedStateIndex = Infinity;\n                        break;\n                    }\n                    case JUMP_TO_ACTION: {\n                        // Jumps to a corresponding state to a specific action.\n                        // Useful when filtering actions.\n                        var index = stagedActionIds.indexOf(liftedAction.actionId);\n                        if (index !== -1)\n                            currentStateIndex = index;\n                        minInvalidatedStateIndex = Infinity;\n                        break;\n                    }\n                    case SWEEP: {\n                        // Forget any actions that are currently being skipped.\n                        stagedActionIds = difference(stagedActionIds, skippedActionIds);\n                        skippedActionIds = [];\n                        currentStateIndex = Math.min(currentStateIndex, stagedActionIds.length - 1);\n                        break;\n                    }\n                    case PERFORM_ACTION: {\n                        // Auto-commit as new actions come in.\n                        if (options.maxAge && stagedActionIds.length === options.maxAge) {\n                            commitExcessActions(1);\n                        }\n                        if (currentStateIndex === stagedActionIds.length - 1) {\n                            currentStateIndex++;\n                        }\n                        var actionId = nextActionId++;\n                        // Mutation! This is the hottest path, and we optimize on purpose.\n                        // It is safe because we set a new key in a cache dictionary.\n                        actionsById[actionId] = liftedAction;\n                        stagedActionIds = __spread(stagedActionIds, [actionId]);\n                        // Optimization: we know that only the new action needs computing.\n                        minInvalidatedStateIndex = stagedActionIds.length - 1;\n                        break;\n                    }\n                    case IMPORT_STATE: {\n                        // Completely replace everything.\n                        (_b = liftedAction.nextLiftedState, monitorState = _b.monitorState, actionsById = _b.actionsById, nextActionId = _b.nextActionId, stagedActionIds = _b.stagedActionIds, skippedActionIds = _b.skippedActionIds, committedState = _b.committedState, currentStateIndex = _b.currentStateIndex, \n                        // prettier-ignore\n                        computedStates = _b.computedStates);\n                        break;\n                    }\n                    case store.INIT: {\n                        // Always recompute states on hot reload and init.\n                        minInvalidatedStateIndex = 0;\n                        if (options.maxAge && stagedActionIds.length > options.maxAge) {\n                            // States must be recomputed before committing excess.\n                            computedStates = recomputeStates(computedStates, minInvalidatedStateIndex, reducer, committedState, actionsById, stagedActionIds, skippedActionIds, errorHandler);\n                            commitExcessActions(stagedActionIds.length - options.maxAge);\n                            // Avoid double computation.\n                            minInvalidatedStateIndex = Infinity;\n                        }\n                        break;\n                    }\n                    case store.UPDATE: {\n                        var stateHasErrors = computedStates.filter(function (state) { return state.error; }).length > 0;\n                        if (stateHasErrors) {\n                            // Recompute all states\n                            minInvalidatedStateIndex = 0;\n                            if (options.maxAge && stagedActionIds.length > options.maxAge) {\n                                // States must be recomputed before committing excess.\n                                computedStates = recomputeStates(computedStates, minInvalidatedStateIndex, reducer, committedState, actionsById, stagedActionIds, skippedActionIds, errorHandler);\n                                commitExcessActions(stagedActionIds.length - options.maxAge);\n                                // Avoid double computation.\n                                minInvalidatedStateIndex = Infinity;\n                            }\n                        }\n                        else {\n                            if (currentStateIndex === stagedActionIds.length - 1) {\n                                currentStateIndex++;\n                            }\n                            // Add a new action to only recompute state\n                            var actionId = nextActionId++;\n                            actionsById[actionId] = new PerformAction(liftedAction, +Date.now());\n                            stagedActionIds = __spread(stagedActionIds, [actionId]);\n                            minInvalidatedStateIndex = stagedActionIds.length - 1;\n                            // States must be recomputed before committing excess.\n                            computedStates = recomputeStates(computedStates, minInvalidatedStateIndex, reducer, committedState, actionsById, stagedActionIds, skippedActionIds, errorHandler);\n                            // Recompute state history with latest reducer and update action\n                            computedStates = computedStates.map(function (cmp) {\n                                return (__assign$2({}, cmp, { state: reducer(cmp.state, liftedAction) }));\n                            });\n                            currentStateIndex = minInvalidatedStateIndex;\n                            if (options.maxAge && stagedActionIds.length > options.maxAge) {\n                                commitExcessActions(stagedActionIds.length - options.maxAge);\n                            }\n                            // Avoid double computation.\n                            minInvalidatedStateIndex = Infinity;\n                        }\n                        break;\n                    }\n                    default: {\n                        // If the action is not recognized, it's a monitor action.\n                        // Optimization: a monitor action can't change history.\n                        minInvalidatedStateIndex = Infinity;\n                        break;\n                    }\n                }\n                computedStates = recomputeStates(computedStates, minInvalidatedStateIndex, reducer, committedState, actionsById, stagedActionIds, skippedActionIds, errorHandler);\n                monitorState = monitorReducer(monitorState, liftedAction);\n                return {\n                    monitorState: monitorState,\n                    actionsById: actionsById,\n                    nextActionId: nextActionId,\n                    stagedActionIds: stagedActionIds,\n                    skippedActionIds: skippedActionIds,\n                    committedState: committedState,\n                    currentStateIndex: currentStateIndex,\n                    computedStates: computedStates,\n                };\n                var _b;\n            };\n        };\n    }\n\n    var __extends = (undefined && undefined.__extends) || (function () {\n        var extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return function (d, b) {\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    var __read$1 = (undefined && undefined.__read) || function (o, n) {\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n        if (!m) return o;\n        var i = m.call(o), r, ar = [], e;\n        try {\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n        }\n        catch (error) { e = { error: error }; }\n        finally {\n            try {\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\n            }\n            finally { if (e) throw e.error; }\n        }\n        return ar;\n    };\n    var DevtoolsDispatcher = /** @class */ (function (_super) {\n        __extends(DevtoolsDispatcher, _super);\n        function DevtoolsDispatcher() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        DevtoolsDispatcher.decorators = [\n            { type: core.Injectable }\n        ];\n        return DevtoolsDispatcher;\n    }(store.ActionsSubject));\n    var StoreDevtools = /** @class */ (function () {\n        function StoreDevtools(dispatcher, actions$, reducers$, extension, scannedActions, errorHandler, initialState, config) {\n            var _this = this;\n            var liftedInitialState = liftInitialState(initialState, config.monitor);\n            var liftReducer = liftReducerWith(initialState, liftedInitialState, errorHandler, config.monitor, config);\n            var liftedAction$ = rxjs.merge(rxjs.merge(actions$.asObservable().pipe(operators.skip(1)), extension.actions$).pipe(operators.map(liftAction)), dispatcher, extension.liftedActions$).pipe(operators.observeOn(rxjs.queueScheduler));\n            var liftedReducer$ = reducers$.pipe(operators.map(liftReducer));\n            var liftedStateSubject = new rxjs.ReplaySubject(1);\n            var liftedStateSubscription = liftedAction$\n                .pipe(operators.withLatestFrom(liftedReducer$), operators.scan(function (_a, _b) {\n                var liftedState = _a.state;\n                var _c = __read$1(_b, 2), action = _c[0], reducer = _c[1];\n                var reducedLiftedState = reducer(liftedState, action);\n                // // Extension should be sent the sanitized lifted state\n                extension.notify(action, reducedLiftedState);\n                return { state: reducedLiftedState, action: action };\n            }, { state: liftedInitialState, action: null }))\n                .subscribe(function (_a) {\n                var state = _a.state, action = _a.action;\n                liftedStateSubject.next(state);\n                if (action.type === PERFORM_ACTION) {\n                    var unliftedAction = action.action;\n                    scannedActions.next(unliftedAction);\n                }\n            });\n            var extensionStartSubscription = extension.start$.subscribe(function () {\n                _this.refresh();\n            });\n            var liftedState$ = liftedStateSubject.asObservable();\n            var state$ = liftedState$.pipe(operators.map(unliftState));\n            this.extensionStartSubscription = extensionStartSubscription;\n            this.stateSubscription = liftedStateSubscription;\n            this.dispatcher = dispatcher;\n            this.liftedState = liftedState$;\n            this.state = state$;\n        }\n        StoreDevtools.prototype.dispatch = function (action) {\n            this.dispatcher.next(action);\n        };\n        StoreDevtools.prototype.next = function (action) {\n            this.dispatcher.next(action);\n        };\n        StoreDevtools.prototype.error = function (error) { };\n        StoreDevtools.prototype.complete = function () { };\n        StoreDevtools.prototype.performAction = function (action) {\n            this.dispatch(new PerformAction(action, +Date.now()));\n        };\n        StoreDevtools.prototype.refresh = function () {\n            this.dispatch(new Refresh());\n        };\n        StoreDevtools.prototype.reset = function () {\n            this.dispatch(new Reset(+Date.now()));\n        };\n        StoreDevtools.prototype.rollback = function () {\n            this.dispatch(new Rollback(+Date.now()));\n        };\n        StoreDevtools.prototype.commit = function () {\n            this.dispatch(new Commit(+Date.now()));\n        };\n        StoreDevtools.prototype.sweep = function () {\n            this.dispatch(new Sweep());\n        };\n        StoreDevtools.prototype.toggleAction = function (id) {\n            this.dispatch(new ToggleAction(id));\n        };\n        StoreDevtools.prototype.jumpToAction = function (actionId) {\n            this.dispatch(new JumpToAction(actionId));\n        };\n        StoreDevtools.prototype.jumpToState = function (index) {\n            this.dispatch(new JumpToState(index));\n        };\n        StoreDevtools.prototype.importState = function (nextLiftedState) {\n            this.dispatch(new ImportState(nextLiftedState));\n        };\n        StoreDevtools.decorators = [\n            { type: core.Injectable }\n        ];\n        /** @nocollapse */\n        StoreDevtools.ctorParameters = function () { return [\n            { type: DevtoolsDispatcher, },\n            { type: store.ActionsSubject, },\n            { type: store.ReducerObservable, },\n            { type: DevtoolsExtension, },\n            { type: store.ScannedActionsSubject, },\n            { type: core.ErrorHandler, },\n            { type: undefined, decorators: [{ type: core.Inject, args: [store.INITIAL_STATE,] },] },\n            { type: StoreDevtoolsConfig, decorators: [{ type: core.Inject, args: [STORE_DEVTOOLS_CONFIG,] },] },\n        ]; };\n        return StoreDevtools;\n    }());\n\n    var IS_EXTENSION_OR_MONITOR_PRESENT = new core.InjectionToken('Is Devtools Extension or Monitor Present');\n    function createIsExtensionOrMonitorPresent(extension, config) {\n        return Boolean(extension) || config.monitor !== noMonitor;\n    }\n    function createReduxDevtoolsExtension() {\n        var extensionKey = '__REDUX_DEVTOOLS_EXTENSION__';\n        if (typeof window === 'object' &&\n            typeof window[extensionKey] !== 'undefined') {\n            return window[extensionKey];\n        }\n        else {\n            return null;\n        }\n    }\n    function createStateObservable(devtools) {\n        return devtools.state;\n    }\n    function noMonitor() {\n        return null;\n    }\n    var DEFAULT_NAME = 'NgRx Store DevTools';\n    function createConfig(_options) {\n        var DEFAULT_OPTIONS = {\n            maxAge: false,\n            monitor: noMonitor,\n            actionSanitizer: undefined,\n            stateSanitizer: undefined,\n            name: DEFAULT_NAME,\n            serialize: false,\n            logOnly: false,\n            features: false,\n        };\n        var options = typeof _options === 'function' ? _options() : _options;\n        var logOnly = options.logOnly\n            ? { pause: true, export: true, test: true }\n            : false;\n        var features = options.features || logOnly;\n        var config = Object.assign({}, DEFAULT_OPTIONS, { features: features }, options);\n        if (config.maxAge && config.maxAge < 2) {\n            throw new Error(\"Devtools 'maxAge' cannot be less than 2, got \" + config.maxAge);\n        }\n        return config;\n    }\n    var StoreDevtoolsModule = /** @class */ (function () {\n        function StoreDevtoolsModule() {\n        }\n        StoreDevtoolsModule.instrument = function (options) {\n            if (options === void 0) { options = {}; }\n            return {\n                ngModule: StoreDevtoolsModule,\n                providers: [\n                    DevtoolsExtension,\n                    DevtoolsDispatcher,\n                    StoreDevtools,\n                    {\n                        provide: INITIAL_OPTIONS,\n                        useValue: options,\n                    },\n                    {\n                        provide: IS_EXTENSION_OR_MONITOR_PRESENT,\n                        deps: [REDUX_DEVTOOLS_EXTENSION, STORE_DEVTOOLS_CONFIG],\n                        useFactory: createIsExtensionOrMonitorPresent,\n                    },\n                    {\n                        provide: REDUX_DEVTOOLS_EXTENSION,\n                        useFactory: createReduxDevtoolsExtension,\n                    },\n                    {\n                        provide: STORE_DEVTOOLS_CONFIG,\n                        deps: [INITIAL_OPTIONS],\n                        useFactory: createConfig,\n                    },\n                    {\n                        provide: store.StateObservable,\n                        deps: [StoreDevtools],\n                        useFactory: createStateObservable,\n                    },\n                    {\n                        provide: store.ReducerManagerDispatcher,\n                        useExisting: DevtoolsDispatcher,\n                    },\n                ],\n            };\n        };\n        StoreDevtoolsModule.decorators = [\n            { type: core.NgModule, args: [{},] }\n        ];\n        return StoreDevtoolsModule;\n    }());\n\n    /**\n     * DO NOT EDIT\n     *\n     * This file is automatically generated at build\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ɵngrx_modules_store_devtools_store_devtools_i = INITIAL_OPTIONS;\n    exports.ɵngrx_modules_store_devtools_store_devtools_h = STORE_DEVTOOLS_CONFIG;\n    exports.ɵngrx_modules_store_devtools_store_devtools_g = DevtoolsDispatcher;\n    exports.ɵngrx_modules_store_devtools_store_devtools_k = DevtoolsExtension;\n    exports.ɵngrx_modules_store_devtools_store_devtools_j = REDUX_DEVTOOLS_EXTENSION;\n    exports.ɵngrx_modules_store_devtools_store_devtools_a = IS_EXTENSION_OR_MONITOR_PRESENT;\n    exports.ɵngrx_modules_store_devtools_store_devtools_f = createConfig;\n    exports.ɵngrx_modules_store_devtools_store_devtools_b = createIsExtensionOrMonitorPresent;\n    exports.ɵngrx_modules_store_devtools_store_devtools_c = createReduxDevtoolsExtension;\n    exports.ɵngrx_modules_store_devtools_store_devtools_d = createStateObservable;\n    exports.ɵngrx_modules_store_devtools_store_devtools_e = noMonitor;\n    exports.StoreDevtoolsModule = StoreDevtoolsModule;\n    exports.StoreDevtools = StoreDevtools;\n    exports.StoreDevtoolsConfig = StoreDevtoolsConfig;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=store-devtools.umd.js.map\n"]}